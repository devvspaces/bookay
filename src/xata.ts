// Generated by Xata Codegen 0.18.0. Please do not edit.
import {
  BaseClientOptions,
  buildClient,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "users",
    columns: [
      { name: "username", type: "string", unique: true },
      { name: "password", type: "string" },
    ],
  },
  {
    name: "books",
    columns: [
      { name: "author", type: "string" },
      { name: "isbn", type: "string" },
      { name: "quantity", type: "int" },
      { name: "price", type: "int" },
      { name: "added", type: "datetime" },
      { name: "updated", type: "datetime" },
      { name: "image", type: "string" },
      { name: "seller", type: "link", link: { table: "profile" } },
      { name: "title", type: "string" },
    ],
  },
  {
    name: "profile",
    columns: [
      { name: "storeName", type: "string", unique: true },
      { name: "phone", type: "string", unique: true },
      { name: "address", type: "string" },
      { name: "user", type: "link", link: { table: "users" }, unique: true },
    ],
  },
  {
    name: "cart",
    columns: [
      { name: "user", type: "link", link: { table: "users" } },
      { name: "book", type: "link", link: { table: "books" } },
    ],
  },
  {
    name: "order",
    columns: [
      { name: "created", type: "datetime" },
      { name: "fullname", type: "string" },
      { name: "phone", type: "string" },
      { name: "state", type: "string" },
      { name: "lga", type: "string" },
      { name: "address", type: "string" },
      { name: "status", type: "string" },
      { name: "rating", type: "float" },
      { name: "comment", type: "text" },
      { name: "user", type: "link", link: { table: "users" } },
      { name: "amount", type: "float" },
      { name: "items", type: "int" },
    ],
  },
  {
    name: "orderBook",
    columns: [
      { name: "book", type: "link", link: { table: "books" } },
      { name: "order", type: "link", link: { table: "order" } },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Users = InferredTypes["users"];
export type UsersRecord = Users & XataRecord;

export type Books = InferredTypes["books"];
export type BooksRecord = Books & XataRecord;

export type Profile = InferredTypes["profile"];
export type ProfileRecord = Profile & XataRecord;

export type Cart = InferredTypes["cart"];
export type CartRecord = Cart & XataRecord;

export type Order = InferredTypes["order"];
export type OrderRecord = Order & XataRecord;

export type OrderBook = InferredTypes["orderBook"];
export type OrderBookRecord = OrderBook & XataRecord;

export type DatabaseSchema = {
  users: UsersRecord;
  books: BooksRecord;
  profile: ProfileRecord;
  cart: CartRecord;
  order: OrderRecord;
  orderBook: OrderBookRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://ayanwola-ayomide-s-workspace-ravucl.eu-west-1.xata.sh/db/books-db",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
